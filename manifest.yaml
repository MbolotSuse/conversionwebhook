apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: conversion-webhook
  name: conversion-webhook
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: conversion-webhook
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: conversion-webhook
    spec:
      containers:
      - image: $REPO:$TAG 
        imagePullPolicy: Always
        name: conversion-webhook
        command: ["/crd-conversion-webhook"]
        args: ["--tls-cert-file", "/etc/tls-volume/tls.crt", "--tls-private-key-file", "/etc/tls-volume/tls.key", "--port", "8443"]
        volumeMounts:
          - name: tls-volume
            mountPath: /etc/tls-volume
            readOnly: true
        ports:
        - containerPort: 8443
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumes:
      - name: tls-volume
        secret:
          secretName: conversion-webhook-secret
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: conversion-webhook
  name: conversion-webhook-svc
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: conversion-webhook
  ports:
  - port: 443
    protocol: TCP
    targetPort: 8443
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: crd-reader
rules:
- apiGroups:
  - "test.cattle.io"
  resources: ["foos"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: crd-reader-default
roleRef:
  kind: ClusterRole
  name: crd-reader
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
